version: '3.7'

services:

  temperature-analytics-api:
    image: temp/temperature-analytics-api:latest
    container_name:  temperature-analytics-api-temp-task
    build: ../temperature-analytics-api
    environment:
      SPRING_PROFILES_ACTIVE: docker
      ANOMALY-DETECTOR_ALGORITHM: BATCH
    ports:
      - "8080:8080"
    depends_on:
      - mongo

  anomaly-detector:
    image: temp/anomaly-detector:latest
    container_name: anomaly-detector-temp-task
    build: ../anomaly-detector
    environment:
      SPRING_PROFILES_ACTIVE: docker

    depends_on:
      - kafka

  anomaly-storage:
    image: temp/anomaly-storage:latest
    container_name: anomaly-storage-temp-task
    build: ../anomaly-storage
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
      - mongo

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-temp-task
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper-temp-task
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  mongo:
    image: arm64v8/mongo:7.0-jammy
    container_name: mongo-temp-task
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: temp
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
